{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#rohan-fernandez","title":"Rohan Fernandez","text":""},{"location":"#egr-314-individual-page","title":"EGR 314 Individual Page","text":"<ul> <li>Refer to the Tabs at the top of the page to see individual assignments or project parts</li> </ul>"},{"location":"Individual_Block_diagram/","title":"Individual Block diagram","text":"<p>Rohan Fernandez EGR 314 - Team 311</p>"},{"location":"Individual_Block_diagram/#here-is-the-block-diagram-for-user-interface-my-sub-section","title":"Here is the block diagram for user interface, my sub-section:","text":""},{"location":"Individual_Component_Selection/","title":"Individual Component Selection","text":""},{"location":"Individual_Component_Selection/#part-1-component-selection","title":"Part 1: Component Selection","text":"<p>PIC Microcontrollers</p> <ol> <li> <p>PIC16F15213T</p> <p></p> <ul> <li>$0.50/each</li> <li>link</li> </ul> Pros Cons Supports UART and I2C Will be difficult to solder due to size and type Very small and cost effective Not flexible for project changes or errors Meets surface mount requirements </li> <li> <p>PIC18F27Q10-I/SO</p> <p></p> <ul> <li>$1.45/each</li> <li>link</li> </ul> Pros Cons Supports UART and I2C Will need its specs to be closely monitored in the datasheet (specific voltages, etc.) Good memory and general specs Chip's length might create spacing concerns Surface mount version to meet project requriements, more space-economical than 40 pin version </li> <li> <p>PIC18F14Q20-I/SS</p> <p></p> <ul> <li>$0.92/each</li> <li>link</li> </ul> Pros Cons Supports UART and I2C, also similar to what was used in class Small amount of memory, can pose serious issues, especially with the already fairly slow I2C Very cost-effective Comparitively lower capabilities Meets surface mount constraint of project Described as a new component, may be buggier than more tested/older ones </li> </ol> <p>Choice: Option 2: PIC18F27Q10-I/SO</p> <p>Rationale: The PIC18F27Q10 was selected due to it being cost-effective while also providing solid capabilities compared to the other options. The 28 pins will allow for potetntial additions as the project's inclusions are adjusted and it meets my sub-system's specific need for I2C (for a screen interface).</p> <p>Display Screens</p> <ol> <li>NHD-C0220BIZ-FS(RGB)-FBW-3VM</li> </ol> <p></p> <ul> <li>$14.46/each</li> <li>link</li> </ul> Pros Cons Specifically designed for I2C Fairly expensive, especially if multiple needed Good Datasheet with accessible key commands Shipping could be a problem, espeically with added tariff RGB backgrounds to make text appear more clearly <ol> <li>AMC0802BR-B-Y6WFDY-I2C</li> </ol> <p></p> <ul> <li>$8.49/each</li> <li>link</li> </ul> Pros Cons Specifically designed for I2C Much less display space compared to other options Cost effective Might require separate voltage regulation from other parts (higher voltage) Physically smaller (less space on board) <ol> <li>NHD-0216AW-IB3</li> </ol> <p></p> <ul> <li>$28.49/each</li> <li>link</li> </ul> Pros Cons Specifically designed for I2C Very expensive, can likely one order one Wide voltage range No Backlight is included More visually pleasing OLED Screen, rather than a more simplistic LCD <p>Choice: Option 1: NHD-C0220BIZ-FS(RGB)-FBW-3VM</p> <p>Rationale: The NHD-C0220BIZ-FS(RGB)-FBW-3VM was selected due to it being a good balance of cost and effectiveness, as it has fairly solid display capapbilities and should be able to show important data while also being able to be smoothly integrated with the rest of the system (voltage, spacing, I2C, etc.).</p> <p>Push-Buttons</p> <ol> <li>3491 (Adafruit Pushbutton)</li> </ol> <p></p> <ul> <li>$2.50/each</li> <li>link</li> </ul> Pros Cons Includes a built-in LED, making it easier to identify the button's state Rather expensive cost per button Larger button for easier pressing The LED light is dimmer when run at 3.3 V Works with a decent range of voltages, so no specific regulation is required <ol> <li>PRT-14460 (Spark-fun Electronics)</li> </ol> <p></p> <ul> <li>$1.75 per pack, $0.44 per button</li> <li>link</li> </ul> Pros Cons Very inexpensive Datasheet with very minimal information Each button is a different color to distingush between functions Buttons might be a bit small and difficult for accurate pressing 4 are in each pack, so there's potentially one spare <ol> <li>1010 (Adafruit square button pack)</li> </ol> <p></p> <ul> <li>$5.95 per pack, $0.40 per button</li> <li>link</li> </ul> Pros Cons Square buttons that are easy to press, so a young student can easily press/use them Datasheet with very little useful information Multiple colors and many spares Only comes in a large pack, so more buttons than needed and higher cost, despite low cost per button <p>Choice: Option 2: PRT-14460 (Spark-fun Electronics)</p> <p>Rationale: These buttons are the best choice for the purposes of this project due to their low cost, as this component is not particularly important to the workings of the project, with others needing to take higher priority, though colored buttons would help its overall cohesion and presentation.</p>"},{"location":"Individual_Component_Selection/#part-2-microcontroller-pic-selection","title":"Part 2 Microcontroller (PIC) Selection:","text":"PIC Info Answer Help Model PIC18F27Q10 Include the entire part number (leave off any letters at the end that specify the package type) Product Page URL link Do not paste links directly into the table.  Use a link Datasheet URL(s) link Do not paste links directly into the table.  Use a link Application Notes URL(s) link Do not paste links directly into the table.  Use a link Vendor link link Digikey, Jameco, etc.  Do not paste links directly into the table.  Use a link Code Examples link url(s) for libraries on github or other sites related to the microcontroller and your planned peripherals External Resources URL(s) Specifically for LCD interface: link Search on Google and YouTube for other resources for each specific microcontroller. Unit cost $1.45 Find in the Microchip online store, or Digikey Absolute Maximum Current for entire IC 350 mA for Vss Find in the microcontroller datasheet Supply Voltage Range 1.8 V - 5.5V Min / Nominal / Max / Absolute Max, as found in datasheet Absolute Maximum current  (for entire IC) Vss = 350 mA, Vdd = 250 mA as found in datasheet Maximum GPIO current  (per pin) \u00b150 mA as found in datasheet Supports External Interrupts? Yes as found in datasheet Required Programming Hardware, Cost, URL Various info regarding the hardware: link found on the microcontroller's product page Works with MPLabX? Yes Required.  See Microchip Development Tools Works with Microchip Code Configurator? Refer to Screenshot Below Can be validated in MPLabX.  Screenshot required. <p>As shown in the above screenshot, in mplabx I was able to set up the currently necessary pins for my section of the project and then successfully build it. The main pins are RC3 and RC4 for the I2C SCL and SDA pins respectively along with 3 GPIOs (RA1, RA2, RA3)vconfigured to input, which represent the 3 buttons that will be involved with user controlled motor movement. A 4th might be added depending on available resources in other parts of the project, for more dynamic side to side motion, which is doable by just adding one extra GPIO button pin. Additonally UART pins ar present to account for communication between devices in the project.</p> Module # Available Needed Associated Pins (or * for any) GPIO 24 3 RA1, RA2, RA3 ADC 24 0 NA UART 2 1 RC6, RC7 SPI 2 0 NA I2C 2 1 RC3, RC4 PWM 2 0 NA ICSP 2 1 MCLR = RE3 (and RB6, RB7) ... ... ... ..."},{"location":"charts/","title":"Charts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"second-page/","title":"Second Page","text":"<p>Things to discuss</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}